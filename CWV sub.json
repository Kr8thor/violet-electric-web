{
  "nodes": [
    {
      "name": "PageSpeed API Call",
      "type": "n8n-nodes-base.httpRequest",
      "parameters": {
        "url": "https://www.googleapis.com/pagespeedonline/v5/runPagespeed",
        "qs": {
          "url": "={{$json.pageUrl}}",
          "category": ["performance", "accessibility", "seo"],
          "strategy": "mobile",
          "key": "={{$credentials.googlePageSpeedApi.apiKey}}"
        }
      }
    },
    {
      "name": "Extract CWV Metrics",
      "type": "n8n-nodes-base.code",
      "parameters": {
        "jsCode": `
const lighthouse = $json.lighthouseResult;
const fieldData = $json.loadingExperience;

return {
  url: $json.id,
  timestamp: new Date().toISOString(),
  
  // Lab Data (Lighthouse)
  lab: {
    lcp: {
      score: lighthouse.audits['largest-contentful-paint'].score,
      value: lighthouse.audits['largest-contentful-paint'].numericValue,
      rating: lighthouse.audits['largest-contentful-paint'].score >= 0.9 ? 'good' : 
              lighthouse.audits['largest-contentful-paint'].score >= 0.5 ? 'needs-improvement' : 'poor'
    },
    cls: {
      score: lighthouse.audits['cumulative-layout-shift'].score,
      value: lighthouse.audits['cumulative-layout-shift'].numericValue,
      rating: lighthouse.audits['cumulative-layout-shift'].score >= 0.9 ? 'good' :
              lighthouse.audits['cumulative-layout-shift'].score >= 0.5 ? 'needs-improvement' : 'poor'
    },
    fid: {
      score: lighthouse.audits['max-potential-fid'].score,
      value: lighthouse.audits['max-potential-fid'].numericValue,
      rating: lighthouse.audits['max-potential-fid'].score >= 0.9 ? 'good' :
              lighthouse.audits['max-potential-fid'].score >= 0.5 ? 'needs-improvement' : 'poor'
    },
    inp: {
      score: lighthouse.audits['interaction-to-next-paint']?.score || null,
      value: lighthouse.audits['interaction-to-next-paint']?.numericValue || null
    },
    ttfb: lighthouse.audits['server-response-time'].numericValue,
    fcp: lighthouse.audits['first-contentful-paint'].numericValue,
    si: lighthouse.audits['speed-index'].numericValue,
    tbt: lighthouse.audits['total-blocking-time'].numericValue
  },
  
  // Field Data (CrUX)
  field: fieldData ? {
    lcp: fieldData.metrics.LARGEST_CONTENTFUL_PAINT_MS,
    cls: fieldData.metrics.CUMULATIVE_LAYOUT_SHIFT_SCORE,
    fid: fieldData.metrics.FIRST_INPUT_DELAY_MS,
    overallCategory: fieldData.overall_category
  } : null,
  
  // Opportunities
  opportunities: lighthouse.audits['render-blocking-resources'] ? {
    renderBlocking: lighthouse.audits['render-blocking-resources'].details.items.length,
    unusedCSS: lighthouse.audits['unused-css-rules']?.details?.items?.length || 0,
    unusedJS: lighthouse.audits['unused-javascript']?.details?.items?.length || 0,
    unoptimizedImages: lighthouse.audits['uses-optimized-images']?.details?.items?.length || 0
  } : {}
};`
      }
    },
    {
      "name": "CWV Threshold Check",
      "type": "n8n-nodes-base.if",
      "parameters": {
        "conditions": {
          "conditions": [
            {
              "value1": "={{$json.lab.lcp.rating}}",
              "value2": "poor",
              "operation": "equals"
            },
            {
              "value1": "={{$json.lab.cls.rating}}",
              "value2": "poor",
              "operation": "equals"
            }
          ],
          "combinator": "or"
        }
      }
    }
  ]
}